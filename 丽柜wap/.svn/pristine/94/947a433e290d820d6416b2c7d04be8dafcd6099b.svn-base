<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, 		initial-scale=1,maximum-scale=1,user-scalable=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="format-detection" content="telephone=no"/>
    <link rel="stylesheet" type="text/css" href="../../css/api.css"/>
    <link rel="stylesheet" type="text/css" href="../../css/commonWindow.css"/>
    <title>home</title>
    <style>
    </style>
</head>
<body>

</body>
<script type="text/javascript" src="../../lib/script/quakooLib/QuakooBase-1.0.0.js"></script>
<script type="text/javascript" src="../../lib/script/quakooLib/QuakooConfig-1.0.0.js"></script>
<script type="text/javascript" src="../../lib/script/quakooLib/QuakooBaseApp-1.0.0.js"></script>
<script type="text/javascript" src="../../lib/script/quakooLib/QuakooBaseAppBusiness-1.0.0.js"></script>
<script type="text/javascript" src="../../lib/script/quakoo/Config.js"></script>
<script type="text/javascript" src="../../script/api.js"></script>
<script type="text/javascript" src="../../lib/script/quakoo/project.js"></script>
<script>


    var resultGroups = [];
    var openedGroup = [];
    var prevId;
    var curPid;
    apiready = function () {
        var groupsMap = [
            {
                name: 'homeProd',
                frames: [
                    {
                        name: 'prod_recommend', pageParam: {},
                    },
                    {
                        name: 'prod_image', pageParam: {},
                    },
                    {
                        name: 'prod_video', pageParam: {},
                    },
                    {
                        name: 'prod_vr', pageParam: {},
                    },
                ],
                cb: function (ret, err) {
                    productTitle(curPid,ret.index)
                }
            },
            {
                name: 'homeModel',
                frames: [
                    {
                        name: 'model_recommend', pageParam: {},
                    },
                    {
                        name: 'model_newbie', pageParam: {},
                    },
                ],
                cb: function (ret, err) {
                    productTitle(curPid,ret.index)
                }
            },
            {
                name: 'homeShoot',
                frames: [
                    {
                        name: 'shoot_photographer', pageParam: {},
                    },
                    {
                        name: 'shoot_organ', pageParam: {},
                    },
                ],
                cb: function (ret, err) {
                    productTitle(curPid,ret.index)
                }
            }
        ];
        groupsMap.forEach(function (item, i) {
            var groupConfig = {
                props: {
                    name: '',
                    rect: {
                        x: 0,
                        marginTop: api.safeArea.top + 44 + 68,
                        w: "auto",
                        marginBottom: 49 + api.safeArea.bottom
                    },
                    frames: [],
                },
                cb: null
            };

            groupConfig.props.name = item.name;
            groupConfig.cb = item.cb;
            item.frames.forEach(function (zitem, i) {
                var frameConfig = {
                    name: '',
                    url: '',
                    useWKWebView: true,
                    pageParam: {},
                    bounces: true,
                    bgColor: '#fff',
                };
                frameConfig.name =zitem.name;
                frameConfig.url ='./'+zitem.name+'.html';
                groupConfig.props.frames.push(frameConfig)
            });
            resultGroups.push(groupConfig)
        });
        openOrSwitchFrameGroup(0)
    };


    function openOrSwitchFrameGroup(index) {
        var curGroup = resultGroups[index];
        var curProps = curGroup.props;
        quakooDb.setItem('homeShellGroup',curProps.name);
        prevId = curPid;
        curPid = curProps.name;
        if(prevId ==  curPid) return;
        if(openedGroup.indexOf(curProps.name)===-1){
            api.openFrameGroup(curGroup.props, curGroup.cb);
        }else {
            if(prevId === curProps.name) {
                api.setFrameGroupAttr({
                    name: prevId,
                    hidden: false
                });
            }
        }

        if (prevId) {
            api.setFrameGroupAttr({
                name: prevId,
                hidden: true
            });
        }
    }

    function productTitle(parentId,index) {
        api.execScript({
            name: 'main',
            script: 'homeContentSwitch_domStyle("'+parentId+'",' + index + ')'
        })
    }

    function groupFrameSwitch(index,parentId) {
        api.setFrameGroupIndex({
            name: parentId,
            index: index,
            scroll: true, //可以左右滑动 reload: true //来回刷新
            // reload: true
        });
    }
</script>
</html>
